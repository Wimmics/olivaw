name: "Olivaw branch initialisation"
author: "Wimmics"
description: "Launches Olivaw model test"
inputs:
  repository:
    description: "The url of the repository to test"
    type: string
    required: true
  ref:
    description: "The ref of the repository to test"
    type: string
    requird: true
  gist-secret:
    description: "The personal access token with only gist scope allowed"
    type: string
    required: true
  server-url:
    description: "The platform URL"
    type: string
    required: false
    default: "https://github.com"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v5 
      with:
        python-version: 'pypy3.9'
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
    - name: Update README.md
      shell: bash
      run: |
        pip install git+https://github.com/Wimmics/olivaw@test-actions-12

        BADGES="$(olivaw show badges --mode=actions --DEV_USERNAME=${{ github.actor }} --REPO_URI=${{ inputs.server-url }}/${{ inputs.repository }} --BRANCH=${{ inputs.ref }})"
        BADGES_DATA=($BADGES)

        echo "MODEL_PASS_COLOR=${BADGES_DATA[3]}" >> $GITHUB_ENV
        echo "MODEL_PASS_LABEL=${BADGES_DATA[6]}" >> $GITHUB_ENV
        echo "MODEL_NOTTESTED_COLOR=${BADGES_DATA[9]}" >> $GITHUB_ENV
        echo "MODEL_NOTTESTED_LABEL=${BADGES_DATA[12]}" >> $GITHUB_ENV
        echo "MODEL_CANNOTTELL_COLOR=${BADGES_DATA[15]}" >> $GITHUB_ENV
        echo "MODEL_CANNOTTELL_LABEL=${BADGES_DATA[18]}" >> $GITHUB_ENV
        echo "MODEL_MINORFAIL_COLOR=${BADGES_DATA[21]}" >> $GITHUB_ENV
        echo "MODEL_MINORFAIL_LABEL=${BADGES_DATA[24]}" >> $GITHUB_ENV
        echo "MODEL_MAJORFAIL_COLOR=${BADGES_DATA[27]}" >> $GITHUB_ENV
        echo "MODEL_MAJORFAIL_LABEL=${BADGES_DATA[30]}" >> $GITHUB_ENV
        echo "DATA_PASS_COLOR=${BADGES_DATA[33]}" >> $GITHUB_ENV
        echo "DATA_PASS_LABEL=${BADGES_DATA[36]}" >> $GITHUB_ENV
        echo "DATA_NOTTESTED_COLOR=${BADGES_DATA[39]}" >> $GITHUB_ENV
        echo "DATA_NOTTESTED_LABEL=${BADGES_DATA[42]}" >> $GITHUB_ENV
        echo "DATA_CANNOTTELL_COLOR=${BADGES_DATA[45]}" >> $GITHUB_ENV
        echo "DATA_CANNOTTELL_LABEL=${BADGES_DATA[48]}" >> $GITHUB_ENV
        echo "DATA_MINORFAIL_COLOR=${BADGES_DATA[51]}" >> $GITHUB_ENV
        echo "DATA_MINORFAIL_LABEL=${BADGES_DATA[54]}" >> $GITHUB_ENV
        echo "DATA_MAJORFAIL_COLOR=${BADGES_DATA[57]}" >> $GITHUB_ENV
        echo "DATA_MAJORFAIL_LABEL=${BADGES_DATA[60]}" >> $GITHUB_ENV
        echo "QUERY_PASS_COLOR=${BADGES_DATA[63]}" >> $GITHUB_ENV
        echo "QUERY_PASS_LABEL=${BADGES_DATA[66]}" >> $GITHUB_ENV
        echo "QUERY_NOTTESTED_COLOR=${BADGES_DATA[69]}" >> $GITHUB_ENV
        echo "QUERY_NOTTESTED_LABEL=${BADGES_DATA[72]}" >> $GITHUB_ENV
        echo "QUERY_CANNOTTELL_COLOR=${BADGES_DATA[75]}" >> $GITHUB_ENV
        echo "QUERY_CANNOTTELL_LABEL=${BADGES_DATA[78]}" >> $GITHUB_ENV
        echo "QUERY_MINORFAIL_COLOR=${BADGES_DATA[81]}" >> $GITHUB_ENV
        echo "QUERY_MINORFAIL_LABEL=${BADGES_DATA[84]}" >> $GITHUB_ENV
        echo "QUERY_MAJORFAIL_COLOR=${BADGES_DATA[87]}" >> $GITHUB_ENV
        echo "QUERY_MAJORFAIL_LABEL=${BADGES_DATA[90]}" >> $GITHUB_ENV
        echo "EL_COLOR=${BADGES_DATA[93]}" >> $GITHUB_ENV
        echo "EL_LABEL=${BADGES_DATA[96]}" >> $GITHUB_ENV
        echo "RL_COLOR=${BADGES_DATA[99]}" >> $GITHUB_ENV
        echo "RL_LABEL=${BADGES_DATA[102]}" >> $GITHUB_ENV

        echo "GISTID=$(olivaw show gist --mode=actions --DEV_USERNAME=${{ github.actor }} --REPO_URI=${{ inputs.server-url }}/${{ inputs.repository }} --BRANCH=${{ inputs.ref }})" >> $GITHUB_ENV

        olivaw init branch --DEV_USERNAME=${{ github.actor }} --REPO_URI=${{ inputs.server-url }}/${{ inputs.repository }} --REF=${{ inputs.ref }}

        REF=${{ inputs.ref }}
        echo "github.ref: $REF"
        IFS='/' read -ra PATHS <<< "$REF"
        BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
        echo $BRANCH_NAME
        echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV
    - name: Commit README.md
      shell: bash
      run: |
        git config --global user.email "no-reply@github.com"
        git config --global user.name "Olivaw in Actions"
        git add README.md
        git commit -m "Initialize README.md for branch ${{ env.BRANCH }} [skip actions]"
        git remote set-url origin ${{ inputs.server-url }}/${{ inputs.repository }}
        git push
    - name: Create the MODEL_PASS Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_MODEL_PASS.json
        label: Pass
        message: ${{ env.MODEL_PASS_LABEL }}
        color: ${{ env.MODEL_PASS_COLOR }}
    - name: Create the MODEL_NOTTESTED Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_MODEL_NOTTESTED.json
        label: NotTested
        message: ${{ env.MODEL_NOTTESTED_LABEL }}
        color: ${{ env.MODEL_NOTTESTED_COLOR }}
    - name: Create the MODEL_CANNOTTELL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_MODEL_CANNOTTELL.json
        label: CannotTell
        message: ${{ env.MODEL_CANNOTTELL_LABEL }}
        color: ${{ env.MODEL_CANNOTTELL_COLOR }}
    - name: Create the MODEL_MINORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_MODEL_MINORFAIL.json
        label: MinorFail
        message: ${{ env.MODEL_MINORFAIL_LABEL }}
        color: ${{ env.MODEL_MINORFAIL_COLOR }}
    - name: Create the MODEL_MAJORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_MODEL_MAJORFAIL.json
        label: MinorFail
        message: ${{ env.MODEL_MAJORFAIL_LABEL }}
        color: ${{ env.MODEL_MAJORFAIL_COLOR }}
    - name: Create the DATA_PASS Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_DATA_PASS.json
        label: Pass
        message: ${{ env.DATA_PASS_LABEL }}
        color: ${{ env.DATA_PASS_COLOR }}
    - name: Create the DATA_NOTTESTED Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_DATA_NOTTESTED.json
        label: NotTested
        message: ${{ env.DATA_NOTTESTED_LABEL }}
        color: ${{ env.DATA_NOTTESTED_COLOR }}
    - name: Create the DATA_CANNOTTELL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_DATA_CANNOTTELL.json
        label: CannotTell
        message: ${{ env.DATA_CANNOTTELL_LABEL }}
        color: ${{ env.DATA_CANNOTTELL_COLOR }}
    - name: Create the DATA_MINORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_DATA_MINORFAIL.json
        label: MinorFail
        message: ${{ env.DATA_MINORFAIL_LABEL }}
        color: ${{ env.DATA_MINORFAIL_COLOR }}
    - name: Create the DATA_MAJORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_DATA_MAJORFAIL.json
        label: MinorFail
        message: ${{ env.DATA_MAJORFAIL_LABEL }}
        color: ${{ env.DATA_MAJORFAIL_COLOR }}
    - name: Create the QUERY_PASS Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_QUERY_PASS.json
        label: Pass
        message: ${{ env.QUERY_PASS_LABEL }}
        color: ${{ env.QUERY_PASS_COLOR }}
    - name: Create the QUERY_NOTTESTED Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_QUERY_NOTTESTED.json
        label: NotTested
        message: ${{ env.QUERY_NOTTESTED_LABEL }}
        color: ${{ env.QUERY_NOTTESTED_COLOR }}
    - name: Create the QUERY_CANNOTTELL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_QUERY_CANNOTTELL.json
        label: CannotTell
        message: ${{ env.QUERY_CANNOTTELL_LABEL }}
        color: ${{ env.QUERY_CANNOTTELL_COLOR }}
    - name: Create the QUERY_MINORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_QUERY_MINORFAIL.json
        label: MinorFail
        message: ${{ env.QUERY_MINORFAIL_LABEL }}
        color: ${{ env.QUERY_MINORFAIL_COLOR }}
    - name: Create the QUERY_MAJORFAIL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_QUERY_MAJORFAIL.json
        label: MinorFail
        message: ${{ env.QUERY_MAJORFAIL_LABEL }}
        color: ${{ env.QUERY_MAJORFAIL_COLOR }}
    - name: Create the EL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_EL.json
        label: OWL EL
        message: ${{ env.EL_LABEL }}
        color: ${{ env.EL_COLOR }}
    - name: Create the RL Badge
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ inputs.gist-secret }}
        gistID: ${{ env.GISTID }}
        filename: ${{ env.BRANCH }}_RL.json
        label: OWL QL
        message: ${{ env.RL_LABEL }}
        color: ${{ env.RL_COLOR }}